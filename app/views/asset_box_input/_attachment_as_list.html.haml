- uid = (attachment.persisted? ? attachment.id : Time.now.to_f.to_s.split('.')[1] + Random.rand(10000).to_s)
- limit ||= 99999999
- attachment_counter ||= 0
- hidden ||= (attachment_counter >= limit)

%li.attachment
  .attachment-title.caption
    - if attachment_links
      = link_to attachment.asset.title, attachment.asset.public_url, :target => '_blank'
    - else
      = attachment.asset.title

  - if attachment_actions.include?('remove')
    %a.attachment-remove{:href => '#'}
      = image_tag('effective_assets/icon_close.png', alt: 'Remove')

  - if attachment.persisted?
    = hidden_field_tag("#{attachable_object_name}[attachments_attributes][#{uid}][id]", attachment.id)
  = hidden_field_tag("#{attachable_object_name}[attachments_attributes][#{uid}][asset_id]", attachment.asset_id)
  = hidden_field_tag("#{attachable_object_name}[attachments_attributes][#{uid}][box]", attachment.box)
  = hidden_field_tag("#{attachable_object_name}[attachments_attributes][#{uid}][_destroy]", attachment.marked_for_destruction? ? 1 : nil, :class => 'asset-box-remove')
  = hidden_field_tag("#{attachable_object_name}[attachments_attributes][#{uid}][position]", 1)
